//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataEntryObservation) DeepCopyInto(out *MetadataEntryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataEntryObservation.
func (in *MetadataEntryObservation) DeepCopy() *MetadataEntryObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataEntryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataEntryParameters) DeepCopyInto(out *MetadataEntryParameters) {
	*out = *in
	if in.IsSystem != nil {
		in, out := &in.IsSystem, &out.IsSystem
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAccess != nil {
		in, out := &in.UserAccess, &out.UserAccess
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataEntryParameters.
func (in *MetadataEntryParameters) DeepCopy() *MetadataEntryParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataEntryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Org) DeepCopyInto(out *Org) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Org.
func (in *Org) DeepCopy() *Org {
	if in == nil {
		return nil
	}
	out := new(Org)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Org) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgList) DeepCopyInto(out *OrgList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Org, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgList.
func (in *OrgList) DeepCopy() *OrgList {
	if in == nil {
		return nil
	}
	out := new(OrgList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrgList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgObservation) DeepCopyInto(out *OrgObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgObservation.
func (in *OrgObservation) DeepCopy() *OrgObservation {
	if in == nil {
		return nil
	}
	out := new(OrgObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgParameters) DeepCopyInto(out *OrgParameters) {
	*out = *in
	if in.CanPublishCatalogs != nil {
		in, out := &in.CanPublishCatalogs, &out.CanPublishCatalogs
		*out = new(bool)
		**out = **in
	}
	if in.CanPublishExternalCatalogs != nil {
		in, out := &in.CanPublishExternalCatalogs, &out.CanPublishExternalCatalogs
		*out = new(bool)
		**out = **in
	}
	if in.CanSubscribeExternalCatalogs != nil {
		in, out := &in.CanSubscribeExternalCatalogs, &out.CanSubscribeExternalCatalogs
		*out = new(bool)
		**out = **in
	}
	if in.DelayAfterPowerOnSeconds != nil {
		in, out := &in.DelayAfterPowerOnSeconds, &out.DelayAfterPowerOnSeconds
		*out = new(float64)
		**out = **in
	}
	if in.DeleteForce != nil {
		in, out := &in.DeleteForce, &out.DeleteForce
		*out = new(bool)
		**out = **in
	}
	if in.DeleteRecursive != nil {
		in, out := &in.DeleteRecursive, &out.DeleteRecursive
		*out = new(bool)
		**out = **in
	}
	if in.DeployedVMQuota != nil {
		in, out := &in.DeployedVMQuota, &out.DeployedVMQuota
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetadataEntry != nil {
		in, out := &in.MetadataEntry, &out.MetadataEntry
		*out = make([]MetadataEntryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StoredVMQuota != nil {
		in, out := &in.StoredVMQuota, &out.StoredVMQuota
		*out = new(float64)
		**out = **in
	}
	if in.VappLease != nil {
		in, out := &in.VappLease, &out.VappLease
		*out = make([]VappLeaseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VappTemplateLease != nil {
		in, out := &in.VappTemplateLease, &out.VappTemplateLease
		*out = make([]VappTemplateLeaseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgParameters.
func (in *OrgParameters) DeepCopy() *OrgParameters {
	if in == nil {
		return nil
	}
	out := new(OrgParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgSpec) DeepCopyInto(out *OrgSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgSpec.
func (in *OrgSpec) DeepCopy() *OrgSpec {
	if in == nil {
		return nil
	}
	out := new(OrgSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgStatus) DeepCopyInto(out *OrgStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgStatus.
func (in *OrgStatus) DeepCopy() *OrgStatus {
	if in == nil {
		return nil
	}
	out := new(OrgStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VappLeaseObservation) DeepCopyInto(out *VappLeaseObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VappLeaseObservation.
func (in *VappLeaseObservation) DeepCopy() *VappLeaseObservation {
	if in == nil {
		return nil
	}
	out := new(VappLeaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VappLeaseParameters) DeepCopyInto(out *VappLeaseParameters) {
	*out = *in
	if in.DeleteOnStorageLeaseExpiration != nil {
		in, out := &in.DeleteOnStorageLeaseExpiration, &out.DeleteOnStorageLeaseExpiration
		*out = new(bool)
		**out = **in
	}
	if in.MaximumRuntimeLeaseInSec != nil {
		in, out := &in.MaximumRuntimeLeaseInSec, &out.MaximumRuntimeLeaseInSec
		*out = new(float64)
		**out = **in
	}
	if in.MaximumStorageLeaseInSec != nil {
		in, out := &in.MaximumStorageLeaseInSec, &out.MaximumStorageLeaseInSec
		*out = new(float64)
		**out = **in
	}
	if in.PowerOffOnRuntimeLeaseExpiration != nil {
		in, out := &in.PowerOffOnRuntimeLeaseExpiration, &out.PowerOffOnRuntimeLeaseExpiration
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VappLeaseParameters.
func (in *VappLeaseParameters) DeepCopy() *VappLeaseParameters {
	if in == nil {
		return nil
	}
	out := new(VappLeaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VappTemplateLeaseObservation) DeepCopyInto(out *VappTemplateLeaseObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VappTemplateLeaseObservation.
func (in *VappTemplateLeaseObservation) DeepCopy() *VappTemplateLeaseObservation {
	if in == nil {
		return nil
	}
	out := new(VappTemplateLeaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VappTemplateLeaseParameters) DeepCopyInto(out *VappTemplateLeaseParameters) {
	*out = *in
	if in.DeleteOnStorageLeaseExpiration != nil {
		in, out := &in.DeleteOnStorageLeaseExpiration, &out.DeleteOnStorageLeaseExpiration
		*out = new(bool)
		**out = **in
	}
	if in.MaximumStorageLeaseInSec != nil {
		in, out := &in.MaximumStorageLeaseInSec, &out.MaximumStorageLeaseInSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VappTemplateLeaseParameters.
func (in *VappTemplateLeaseParameters) DeepCopy() *VappTemplateLeaseParameters {
	if in == nil {
		return nil
	}
	out := new(VappTemplateLeaseParameters)
	in.DeepCopyInto(out)
	return out
}
