//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Catalog) DeepCopyInto(out *Catalog) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Catalog.
func (in *Catalog) DeepCopy() *Catalog {
	if in == nil {
		return nil
	}
	out := new(Catalog)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Catalog) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogList) DeepCopyInto(out *CatalogList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Catalog, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogList.
func (in *CatalogList) DeepCopy() *CatalogList {
	if in == nil {
		return nil
	}
	out := new(CatalogList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CatalogList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogObservation) DeepCopyInto(out *CatalogObservation) {
	*out = *in
	if in.CatalogVersion != nil {
		in, out := &in.CatalogVersion, &out.CatalogVersion
		*out = new(float64)
		**out = **in
	}
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		*out = new(string)
		**out = **in
	}
	if in.Href != nil {
		in, out := &in.Href, &out.Href
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsPublished != nil {
		in, out := &in.IsPublished, &out.IsPublished
		*out = new(bool)
		**out = **in
	}
	if in.IsShared != nil {
		in, out := &in.IsShared, &out.IsShared
		*out = new(bool)
		**out = **in
	}
	if in.MediaItemList != nil {
		in, out := &in.MediaItemList, &out.MediaItemList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.NumberOfMedia != nil {
		in, out := &in.NumberOfMedia, &out.NumberOfMedia
		*out = new(float64)
		**out = **in
	}
	if in.NumberOfVappTemplates != nil {
		in, out := &in.NumberOfVappTemplates, &out.NumberOfVappTemplates
		*out = new(float64)
		**out = **in
	}
	if in.OwnerName != nil {
		in, out := &in.OwnerName, &out.OwnerName
		*out = new(string)
		**out = **in
	}
	if in.PublishSubscriptionType != nil {
		in, out := &in.PublishSubscriptionType, &out.PublishSubscriptionType
		*out = new(string)
		**out = **in
	}
	if in.PublishSubscriptionURL != nil {
		in, out := &in.PublishSubscriptionURL, &out.PublishSubscriptionURL
		*out = new(string)
		**out = **in
	}
	if in.VappTemplateList != nil {
		in, out := &in.VappTemplateList, &out.VappTemplateList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogObservation.
func (in *CatalogObservation) DeepCopy() *CatalogObservation {
	if in == nil {
		return nil
	}
	out := new(CatalogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogParameters) DeepCopyInto(out *CatalogParameters) {
	*out = *in
	if in.CacheEnabled != nil {
		in, out := &in.CacheEnabled, &out.CacheEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DeleteForce != nil {
		in, out := &in.DeleteForce, &out.DeleteForce
		*out = new(bool)
		**out = **in
	}
	if in.DeleteRecursive != nil {
		in, out := &in.DeleteRecursive, &out.DeleteRecursive
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetadataEntry != nil {
		in, out := &in.MetadataEntry, &out.MetadataEntry
		*out = make([]MetadataEntryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PreserveIdentityInformation != nil {
		in, out := &in.PreserveIdentityInformation, &out.PreserveIdentityInformation
		*out = new(bool)
		**out = **in
	}
	if in.PublishEnabled != nil {
		in, out := &in.PublishEnabled, &out.PublishEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StorageProfileID != nil {
		in, out := &in.StorageProfileID, &out.StorageProfileID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogParameters.
func (in *CatalogParameters) DeepCopy() *CatalogParameters {
	if in == nil {
		return nil
	}
	out := new(CatalogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogSpec) DeepCopyInto(out *CatalogSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogSpec.
func (in *CatalogSpec) DeepCopy() *CatalogSpec {
	if in == nil {
		return nil
	}
	out := new(CatalogSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CatalogStatus) DeepCopyInto(out *CatalogStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CatalogStatus.
func (in *CatalogStatus) DeepCopy() *CatalogStatus {
	if in == nil {
		return nil
	}
	out := new(CatalogStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataEntryObservation) DeepCopyInto(out *MetadataEntryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataEntryObservation.
func (in *MetadataEntryObservation) DeepCopy() *MetadataEntryObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataEntryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataEntryParameters) DeepCopyInto(out *MetadataEntryParameters) {
	*out = *in
	if in.IsSystem != nil {
		in, out := &in.IsSystem, &out.IsSystem
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAccess != nil {
		in, out := &in.UserAccess, &out.UserAccess
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataEntryParameters.
func (in *MetadataEntryParameters) DeepCopy() *MetadataEntryParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataEntryParameters)
	in.DeepCopyInto(out)
	return out
}
