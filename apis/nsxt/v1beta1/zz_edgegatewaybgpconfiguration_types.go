/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type EdgeGatewayBGPConfigurationObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type EdgeGatewayBGPConfigurationParameters struct {

	// - A flag indicating whether ECMP is enabled or not
	// Defines if ECMP (Equal-cost multi-path routing) is enabled
	// +kubebuilder:validation:Optional
	EcmpEnabled *bool `json:"ecmpEnabled,omitempty" tf:"ecmp_enabled,omitempty"`

	// The ID of the Edge Gateway (NSX-T only). Can be looked up using
	// vcd_nsxt_edgegateway datasource
	// Edge gateway ID for BGP Configuration
	// +crossplane:generate:reference:type=EdgeGateway
	// +kubebuilder:validation:Optional
	EdgeGatewayID *string `json:"edgeGatewayId,omitempty" tf:"edge_gateway_id,omitempty"`

	// Reference to a EdgeGateway to populate edgeGatewayId.
	// +kubebuilder:validation:Optional
	EdgeGatewayIDRef *v1.Reference `json:"edgeGatewayIdRef,omitempty" tf:"-"`

	// Selector for a EdgeGateway to populate edgeGatewayId.
	// +kubebuilder:validation:Optional
	EdgeGatewayIDSelector *v1.Selector `json:"edgeGatewayIdSelector,omitempty" tf:"-"`

	// Defines if BGP service is enabled or not
	// Defines if BGP service is enabled
	// +kubebuilder:validation:Required
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// - Describes Graceful Restart configuration Modes for BGP
	// configuration on an Edge Gateway. Read only for VRF backed Edge Gateways. Possible options are:
	// Graceful restart configuration on Edge Gateway. One of 'DISABLE', 'HELPER_ONLY', 'GRACEFUL_AND_HELPER'
	// +kubebuilder:validation:Optional
	GracefulRestartMode *string `json:"gracefulRestartMode,omitempty" tf:"graceful_restart_mode,omitempty"`

	// Maximum time taken (in seconds) for a BGP session to be
	// established after a restart. If the session is not re-established within this timer, the receiving
	// speaker will delete all the stale routes from that peer. Read only for VRF backed Edge Gateways.
	// Maximum time taken (in seconds) for a BGP session to be established after a restart
	// +kubebuilder:validation:Optional
	GracefulRestartTimer *float64 `json:"gracefulRestartTimer,omitempty" tf:"graceful_restart_timer,omitempty"`

	// BGP autonomous systems (AS) number to advertise to BGP peers. BGP
	// AS number can be specified in either ASPLAIN or ASDOT formats, like ASPLAIN format : '65546',
	// ASDOT format : '1.10'. Read only for VRF backed Edge Gateways
	// Autonomous system number
	// +kubebuilder:validation:Optional
	LocalAsNumber *string `json:"localAsNumber,omitempty" tf:"local_as_number,omitempty"`

	// The name of organization to use, optional if defined at provider level. Useful
	// when connected as sysadmin working across different organisations
	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations
	// +kubebuilder:validation:Optional
	Org *string `json:"org,omitempty" tf:"org,omitempty"`

	// - Maximum time (in seconds) before stale routes are removed when
	// BGP restarts. Read only for VRF backed Edge Gateways
	// Maximum time (in seconds) before stale routes are removed when BGP restarts
	// +kubebuilder:validation:Optional
	StaleRouteTimer *float64 `json:"staleRouteTimer,omitempty" tf:"stale_route_timer,omitempty"`
}

// EdgeGatewayBGPConfigurationSpec defines the desired state of EdgeGatewayBGPConfiguration
type EdgeGatewayBGPConfigurationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     EdgeGatewayBGPConfigurationParameters `json:"forProvider"`
}

// EdgeGatewayBGPConfigurationStatus defines the observed state of EdgeGatewayBGPConfiguration.
type EdgeGatewayBGPConfigurationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        EdgeGatewayBGPConfigurationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// EdgeGatewayBGPConfiguration is the Schema for the EdgeGatewayBGPConfigurations API. Provides a resource to manage BGP configuration on NSX-T Edge Gateway that has a dedicated Tier-0 Gateway or VRF.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vcd}
type EdgeGatewayBGPConfiguration struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EdgeGatewayBGPConfigurationSpec   `json:"spec"`
	Status            EdgeGatewayBGPConfigurationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// EdgeGatewayBGPConfigurationList contains a list of EdgeGatewayBGPConfigurations
type EdgeGatewayBGPConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []EdgeGatewayBGPConfiguration `json:"items"`
}

// Repository type metadata.
var (
	EdgeGatewayBGPConfiguration_Kind             = "EdgeGatewayBGPConfiguration"
	EdgeGatewayBGPConfiguration_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: EdgeGatewayBGPConfiguration_Kind}.String()
	EdgeGatewayBGPConfiguration_KindAPIVersion   = EdgeGatewayBGPConfiguration_Kind + "." + CRDGroupVersion.String()
	EdgeGatewayBGPConfiguration_GroupVersionKind = CRDGroupVersion.WithKind(EdgeGatewayBGPConfiguration_Kind)
)

func init() {
	SchemeBuilder.Register(&EdgeGatewayBGPConfiguration{}, &EdgeGatewayBGPConfigurationList{})
}
