//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControl) DeepCopyInto(out *AccessControl) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControl.
func (in *AccessControl) DeepCopy() *AccessControl {
	if in == nil {
		return nil
	}
	out := new(AccessControl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessControl) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlList) DeepCopyInto(out *AccessControlList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccessControl, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlList.
func (in *AccessControlList) DeepCopy() *AccessControlList {
	if in == nil {
		return nil
	}
	out := new(AccessControlList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessControlList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlObservation) DeepCopyInto(out *AccessControlObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SharedWith != nil {
		in, out := &in.SharedWith, &out.SharedWith
		*out = make([]SharedWithObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlObservation.
func (in *AccessControlObservation) DeepCopy() *AccessControlObservation {
	if in == nil {
		return nil
	}
	out := new(AccessControlObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlParameters) DeepCopyInto(out *AccessControlParameters) {
	*out = *in
	if in.EveryoneAccessLevel != nil {
		in, out := &in.EveryoneAccessLevel, &out.EveryoneAccessLevel
		*out = new(string)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.SharedWith != nil {
		in, out := &in.SharedWith, &out.SharedWith
		*out = make([]SharedWithParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SharedWithEveryone != nil {
		in, out := &in.SharedWithEveryone, &out.SharedWithEveryone
		*out = new(bool)
		**out = **in
	}
	if in.Vdc != nil {
		in, out := &in.Vdc, &out.Vdc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlParameters.
func (in *AccessControlParameters) DeepCopy() *AccessControlParameters {
	if in == nil {
		return nil
	}
	out := new(AccessControlParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlSpec) DeepCopyInto(out *AccessControlSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlSpec.
func (in *AccessControlSpec) DeepCopy() *AccessControlSpec {
	if in == nil {
		return nil
	}
	out := new(AccessControlSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessControlStatus) DeepCopyInto(out *AccessControlStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessControlStatus.
func (in *AccessControlStatus) DeepCopy() *AccessControlStatus {
	if in == nil {
		return nil
	}
	out := new(AccessControlStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationObservation) DeepCopyInto(out *CustomizationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationObservation.
func (in *CustomizationObservation) DeepCopy() *CustomizationObservation {
	if in == nil {
		return nil
	}
	out := new(CustomizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomizationParameters) DeepCopyInto(out *CustomizationParameters) {
	*out = *in
	if in.AdminPasswordSecretRef != nil {
		in, out := &in.AdminPasswordSecretRef, &out.AdminPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AllowLocalAdminPassword != nil {
		in, out := &in.AllowLocalAdminPassword, &out.AllowLocalAdminPassword
		*out = new(bool)
		**out = **in
	}
	if in.AutoGeneratePassword != nil {
		in, out := &in.AutoGeneratePassword, &out.AutoGeneratePassword
		*out = new(bool)
		**out = **in
	}
	if in.ChangeSid != nil {
		in, out := &in.ChangeSid, &out.ChangeSid
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Force != nil {
		in, out := &in.Force, &out.Force
		*out = new(bool)
		**out = **in
	}
	if in.Initscript != nil {
		in, out := &in.Initscript, &out.Initscript
		*out = new(string)
		**out = **in
	}
	if in.JoinDomain != nil {
		in, out := &in.JoinDomain, &out.JoinDomain
		*out = new(bool)
		**out = **in
	}
	if in.JoinDomainAccountOu != nil {
		in, out := &in.JoinDomainAccountOu, &out.JoinDomainAccountOu
		*out = new(string)
		**out = **in
	}
	if in.JoinDomainName != nil {
		in, out := &in.JoinDomainName, &out.JoinDomainName
		*out = new(string)
		**out = **in
	}
	if in.JoinDomainPasswordSecretRef != nil {
		in, out := &in.JoinDomainPasswordSecretRef, &out.JoinDomainPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.JoinDomainUser != nil {
		in, out := &in.JoinDomainUser, &out.JoinDomainUser
		*out = new(string)
		**out = **in
	}
	if in.JoinOrgDomain != nil {
		in, out := &in.JoinOrgDomain, &out.JoinOrgDomain
		*out = new(bool)
		**out = **in
	}
	if in.MustChangePasswordOnFirstLogin != nil {
		in, out := &in.MustChangePasswordOnFirstLogin, &out.MustChangePasswordOnFirstLogin
		*out = new(bool)
		**out = **in
	}
	if in.NumberOfAutoLogons != nil {
		in, out := &in.NumberOfAutoLogons, &out.NumberOfAutoLogons
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomizationParameters.
func (in *CustomizationParameters) DeepCopy() *CustomizationParameters {
	if in == nil {
		return nil
	}
	out := new(CustomizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPPoolObservation) DeepCopyInto(out *DHCPPoolObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPPoolObservation.
func (in *DHCPPoolObservation) DeepCopy() *DHCPPoolObservation {
	if in == nil {
		return nil
	}
	out := new(DHCPPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPPoolParameters) DeepCopyInto(out *DHCPPoolParameters) {
	*out = *in
	if in.DefaultLeaseTime != nil {
		in, out := &in.DefaultLeaseTime, &out.DefaultLeaseTime
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EndAddress != nil {
		in, out := &in.EndAddress, &out.EndAddress
		*out = new(string)
		**out = **in
	}
	if in.MaxLeaseTime != nil {
		in, out := &in.MaxLeaseTime, &out.MaxLeaseTime
		*out = new(float64)
		**out = **in
	}
	if in.StartAddress != nil {
		in, out := &in.StartAddress, &out.StartAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPPoolParameters.
func (in *DHCPPoolParameters) DeepCopy() *DHCPPoolParameters {
	if in == nil {
		return nil
	}
	out := new(DHCPPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskObservation) DeepCopyInto(out *DiskObservation) {
	*out = *in
	if in.SizeInMb != nil {
		in, out := &in.SizeInMb, &out.SizeInMb
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskObservation.
func (in *DiskObservation) DeepCopy() *DiskObservation {
	if in == nil {
		return nil
	}
	out := new(DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskParameters) DeepCopyInto(out *DiskParameters) {
	*out = *in
	if in.BusNumber != nil {
		in, out := &in.BusNumber, &out.BusNumber
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.UnitNumber != nil {
		in, out := &in.UnitNumber, &out.UnitNumber
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskParameters.
func (in *DiskParameters) DeepCopy() *DiskParameters {
	if in == nil {
		return nil
	}
	out := new(DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRules) DeepCopyInto(out *FirewallRules) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRules.
func (in *FirewallRules) DeepCopy() *FirewallRules {
	if in == nil {
		return nil
	}
	out := new(FirewallRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallRules) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRulesList) DeepCopyInto(out *FirewallRulesList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FirewallRules, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRulesList.
func (in *FirewallRulesList) DeepCopy() *FirewallRulesList {
	if in == nil {
		return nil
	}
	out := new(FirewallRulesList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FirewallRulesList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRulesObservation) DeepCopyInto(out *FirewallRulesObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRulesObservation.
func (in *FirewallRulesObservation) DeepCopy() *FirewallRulesObservation {
	if in == nil {
		return nil
	}
	out := new(FirewallRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRulesParameters) DeepCopyInto(out *FirewallRulesParameters) {
	*out = *in
	if in.DefaultAction != nil {
		in, out := &in.DefaultAction, &out.DefaultAction
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.LogDefaultAction != nil {
		in, out := &in.LogDefaultAction, &out.LogDefaultAction
		*out = new(bool)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]RuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VappID != nil {
		in, out := &in.VappID, &out.VappID
		*out = new(string)
		**out = **in
	}
	if in.VappIDRef != nil {
		in, out := &in.VappIDRef, &out.VappIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VappIDSelector != nil {
		in, out := &in.VappIDSelector, &out.VappIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Vdc != nil {
		in, out := &in.Vdc, &out.Vdc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRulesParameters.
func (in *FirewallRulesParameters) DeepCopy() *FirewallRulesParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRulesSpec) DeepCopyInto(out *FirewallRulesSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRulesSpec.
func (in *FirewallRulesSpec) DeepCopy() *FirewallRulesSpec {
	if in == nil {
		return nil
	}
	out := new(FirewallRulesSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallRulesStatus) DeepCopyInto(out *FirewallRulesStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallRulesStatus.
func (in *FirewallRulesStatus) DeepCopy() *FirewallRulesStatus {
	if in == nil {
		return nil
	}
	out := new(FirewallRulesStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndependentDisk) DeepCopyInto(out *IndependentDisk) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndependentDisk.
func (in *IndependentDisk) DeepCopy() *IndependentDisk {
	if in == nil {
		return nil
	}
	out := new(IndependentDisk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndependentDisk) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndependentDiskList) DeepCopyInto(out *IndependentDiskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IndependentDisk, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndependentDiskList.
func (in *IndependentDiskList) DeepCopy() *IndependentDiskList {
	if in == nil {
		return nil
	}
	out := new(IndependentDiskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndependentDiskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndependentDiskObservation) DeepCopyInto(out *IndependentDiskObservation) {
	*out = *in
	if in.AttachedVMIds != nil {
		in, out := &in.AttachedVMIds, &out.AttachedVMIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DatastoreName != nil {
		in, out := &in.DatastoreName, &out.DatastoreName
		*out = new(string)
		**out = **in
	}
	if in.Encrypted != nil {
		in, out := &in.Encrypted, &out.Encrypted
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.IsAttached != nil {
		in, out := &in.IsAttached, &out.IsAttached
		*out = new(bool)
		**out = **in
	}
	if in.OwnerName != nil {
		in, out := &in.OwnerName, &out.OwnerName
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndependentDiskObservation.
func (in *IndependentDiskObservation) DeepCopy() *IndependentDiskObservation {
	if in == nil {
		return nil
	}
	out := new(IndependentDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndependentDiskParameters) DeepCopyInto(out *IndependentDiskParameters) {
	*out = *in
	if in.BusSubType != nil {
		in, out := &in.BusSubType, &out.BusSubType
		*out = new(string)
		**out = **in
	}
	if in.BusType != nil {
		in, out := &in.BusType, &out.BusType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetadataEntry != nil {
		in, out := &in.MetadataEntry, &out.MetadataEntry
		*out = make([]MetadataEntryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.SharingType != nil {
		in, out := &in.SharingType, &out.SharingType
		*out = new(string)
		**out = **in
	}
	if in.SizeInMb != nil {
		in, out := &in.SizeInMb, &out.SizeInMb
		*out = new(float64)
		**out = **in
	}
	if in.StorageProfile != nil {
		in, out := &in.StorageProfile, &out.StorageProfile
		*out = new(string)
		**out = **in
	}
	if in.Vdc != nil {
		in, out := &in.Vdc, &out.Vdc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndependentDiskParameters.
func (in *IndependentDiskParameters) DeepCopy() *IndependentDiskParameters {
	if in == nil {
		return nil
	}
	out := new(IndependentDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndependentDiskSpec) DeepCopyInto(out *IndependentDiskSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndependentDiskSpec.
func (in *IndependentDiskSpec) DeepCopy() *IndependentDiskSpec {
	if in == nil {
		return nil
	}
	out := new(IndependentDiskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndependentDiskStatus) DeepCopyInto(out *IndependentDiskStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndependentDiskStatus.
func (in *IndependentDiskStatus) DeepCopy() *IndependentDiskStatus {
	if in == nil {
		return nil
	}
	out := new(IndependentDiskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalDiskObservation) DeepCopyInto(out *InternalDiskObservation) {
	*out = *in
	if in.BusNumber != nil {
		in, out := &in.BusNumber, &out.BusNumber
		*out = new(float64)
		**out = **in
	}
	if in.BusType != nil {
		in, out := &in.BusType, &out.BusType
		*out = new(string)
		**out = **in
	}
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.SizeInMb != nil {
		in, out := &in.SizeInMb, &out.SizeInMb
		*out = new(float64)
		**out = **in
	}
	if in.StorageProfile != nil {
		in, out := &in.StorageProfile, &out.StorageProfile
		*out = new(string)
		**out = **in
	}
	if in.ThinProvisioned != nil {
		in, out := &in.ThinProvisioned, &out.ThinProvisioned
		*out = new(bool)
		**out = **in
	}
	if in.UnitNumber != nil {
		in, out := &in.UnitNumber, &out.UnitNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalDiskObservation.
func (in *InternalDiskObservation) DeepCopy() *InternalDiskObservation {
	if in == nil {
		return nil
	}
	out := new(InternalDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternalDiskParameters) DeepCopyInto(out *InternalDiskParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternalDiskParameters.
func (in *InternalDiskParameters) DeepCopy() *InternalDiskParameters {
	if in == nil {
		return nil
	}
	out := new(InternalDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LeaseObservation) DeepCopyInto(out *LeaseObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LeaseObservation.
func (in *LeaseObservation) DeepCopy() *LeaseObservation {
	if in == nil {
		return nil
	}
	out := new(LeaseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LeaseParameters) DeepCopyInto(out *LeaseParameters) {
	*out = *in
	if in.RuntimeLeaseInSec != nil {
		in, out := &in.RuntimeLeaseInSec, &out.RuntimeLeaseInSec
		*out = new(float64)
		**out = **in
	}
	if in.StorageLeaseInSec != nil {
		in, out := &in.StorageLeaseInSec, &out.StorageLeaseInSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LeaseParameters.
func (in *LeaseParameters) DeepCopy() *LeaseParameters {
	if in == nil {
		return nil
	}
	out := new(LeaseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataEntryObservation) DeepCopyInto(out *MetadataEntryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataEntryObservation.
func (in *MetadataEntryObservation) DeepCopy() *MetadataEntryObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataEntryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataEntryParameters) DeepCopyInto(out *MetadataEntryParameters) {
	*out = *in
	if in.IsSystem != nil {
		in, out := &in.IsSystem, &out.IsSystem
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAccess != nil {
		in, out := &in.UserAccess, &out.UserAccess
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataEntryParameters.
func (in *MetadataEntryParameters) DeepCopy() *MetadataEntryParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataEntryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATRules) DeepCopyInto(out *NATRules) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATRules.
func (in *NATRules) DeepCopy() *NATRules {
	if in == nil {
		return nil
	}
	out := new(NATRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATRules) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATRulesList) DeepCopyInto(out *NATRulesList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NATRules, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATRulesList.
func (in *NATRulesList) DeepCopy() *NATRulesList {
	if in == nil {
		return nil
	}
	out := new(NATRulesList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATRulesList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATRulesObservation) DeepCopyInto(out *NATRulesObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]NATRulesRuleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATRulesObservation.
func (in *NATRulesObservation) DeepCopy() *NATRulesObservation {
	if in == nil {
		return nil
	}
	out := new(NATRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATRulesParameters) DeepCopyInto(out *NATRulesParameters) {
	*out = *in
	if in.EnableIPMasquerade != nil {
		in, out := &in.EnableIPMasquerade, &out.EnableIPMasquerade
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.NATType != nil {
		in, out := &in.NATType, &out.NATType
		*out = new(string)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]NATRulesRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VappID != nil {
		in, out := &in.VappID, &out.VappID
		*out = new(string)
		**out = **in
	}
	if in.VappIDRef != nil {
		in, out := &in.VappIDRef, &out.VappIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VappIDSelector != nil {
		in, out := &in.VappIDSelector, &out.VappIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Vdc != nil {
		in, out := &in.Vdc, &out.Vdc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATRulesParameters.
func (in *NATRulesParameters) DeepCopy() *NATRulesParameters {
	if in == nil {
		return nil
	}
	out := new(NATRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATRulesRuleObservation) DeepCopyInto(out *NATRulesRuleObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATRulesRuleObservation.
func (in *NATRulesRuleObservation) DeepCopy() *NATRulesRuleObservation {
	if in == nil {
		return nil
	}
	out := new(NATRulesRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATRulesRuleParameters) DeepCopyInto(out *NATRulesRuleParameters) {
	*out = *in
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = new(string)
		**out = **in
	}
	if in.ExternalPort != nil {
		in, out := &in.ExternalPort, &out.ExternalPort
		*out = new(float64)
		**out = **in
	}
	if in.ForwardToPort != nil {
		in, out := &in.ForwardToPort, &out.ForwardToPort
		*out = new(float64)
		**out = **in
	}
	if in.MappingMode != nil {
		in, out := &in.MappingMode, &out.MappingMode
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.VMID != nil {
		in, out := &in.VMID, &out.VMID
		*out = new(string)
		**out = **in
	}
	if in.VMIDRef != nil {
		in, out := &in.VMIDRef, &out.VMIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VMIDSelector != nil {
		in, out := &in.VMIDSelector, &out.VMIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VMNicID != nil {
		in, out := &in.VMNicID, &out.VMNicID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATRulesRuleParameters.
func (in *NATRulesRuleParameters) DeepCopy() *NATRulesRuleParameters {
	if in == nil {
		return nil
	}
	out := new(NATRulesRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATRulesSpec) DeepCopyInto(out *NATRulesSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATRulesSpec.
func (in *NATRulesSpec) DeepCopy() *NATRulesSpec {
	if in == nil {
		return nil
	}
	out := new(NATRulesSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATRulesStatus) DeepCopyInto(out *NATRulesStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATRulesStatus.
func (in *NATRulesStatus) DeepCopy() *NATRulesStatus {
	if in == nil {
		return nil
	}
	out := new(NATRulesStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Network) DeepCopyInto(out *Network) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Network.
func (in *Network) DeepCopy() *Network {
	if in == nil {
		return nil
	}
	out := new(Network)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Network) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkList) DeepCopyInto(out *NetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Network, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkList.
func (in *NetworkList) DeepCopy() *NetworkList {
	if in == nil {
		return nil
	}
	out := new(NetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkObservation) DeepCopyInto(out *NetworkObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkObservation.
func (in *NetworkObservation) DeepCopy() *NetworkObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkParameters) DeepCopyInto(out *NetworkParameters) {
	*out = *in
	if in.DHCPPool != nil {
		in, out := &in.DHCPPool, &out.DHCPPool
		*out = make([]DHCPPoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DNSSuffix != nil {
		in, out := &in.DNSSuffix, &out.DNSSuffix
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Dns1 != nil {
		in, out := &in.Dns1, &out.Dns1
		*out = new(string)
		**out = **in
	}
	if in.Dns2 != nil {
		in, out := &in.Dns2, &out.Dns2
		*out = new(string)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
	if in.GuestVlanAllowed != nil {
		in, out := &in.GuestVlanAllowed, &out.GuestVlanAllowed
		*out = new(bool)
		**out = **in
	}
	if in.Netmask != nil {
		in, out := &in.Netmask, &out.Netmask
		*out = new(string)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.OrgNetworkName != nil {
		in, out := &in.OrgNetworkName, &out.OrgNetworkName
		*out = new(string)
		**out = **in
	}
	if in.RetainIPMacEnabled != nil {
		in, out := &in.RetainIPMacEnabled, &out.RetainIPMacEnabled
		*out = new(bool)
		**out = **in
	}
	if in.StaticIPPool != nil {
		in, out := &in.StaticIPPool, &out.StaticIPPool
		*out = make([]StaticIPPoolParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VappName != nil {
		in, out := &in.VappName, &out.VappName
		*out = new(string)
		**out = **in
	}
	if in.Vdc != nil {
		in, out := &in.Vdc, &out.Vdc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkParameters.
func (in *NetworkParameters) DeepCopy() *NetworkParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSpec) DeepCopyInto(out *NetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSpec.
func (in *NetworkSpec) DeepCopy() *NetworkSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkStatus) DeepCopyInto(out *NetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkStatus.
func (in *NetworkStatus) DeepCopy() *NetworkStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgNetwork) DeepCopyInto(out *OrgNetwork) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgNetwork.
func (in *OrgNetwork) DeepCopy() *OrgNetwork {
	if in == nil {
		return nil
	}
	out := new(OrgNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrgNetwork) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgNetworkList) DeepCopyInto(out *OrgNetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OrgNetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgNetworkList.
func (in *OrgNetworkList) DeepCopy() *OrgNetworkList {
	if in == nil {
		return nil
	}
	out := new(OrgNetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrgNetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgNetworkObservation) DeepCopyInto(out *OrgNetworkObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgNetworkObservation.
func (in *OrgNetworkObservation) DeepCopy() *OrgNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(OrgNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgNetworkParameters) DeepCopyInto(out *OrgNetworkParameters) {
	*out = *in
	if in.IsFenced != nil {
		in, out := &in.IsFenced, &out.IsFenced
		*out = new(bool)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.RetainIPMacEnabled != nil {
		in, out := &in.RetainIPMacEnabled, &out.RetainIPMacEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VappName != nil {
		in, out := &in.VappName, &out.VappName
		*out = new(string)
		**out = **in
	}
	if in.Vdc != nil {
		in, out := &in.Vdc, &out.Vdc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgNetworkParameters.
func (in *OrgNetworkParameters) DeepCopy() *OrgNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(OrgNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgNetworkSpec) DeepCopyInto(out *OrgNetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgNetworkSpec.
func (in *OrgNetworkSpec) DeepCopy() *OrgNetworkSpec {
	if in == nil {
		return nil
	}
	out := new(OrgNetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrgNetworkStatus) DeepCopyInto(out *OrgNetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrgNetworkStatus.
func (in *OrgNetworkStatus) DeepCopy() *OrgNetworkStatus {
	if in == nil {
		return nil
	}
	out := new(OrgNetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideTemplateDiskObservation) DeepCopyInto(out *OverrideTemplateDiskObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideTemplateDiskObservation.
func (in *OverrideTemplateDiskObservation) DeepCopy() *OverrideTemplateDiskObservation {
	if in == nil {
		return nil
	}
	out := new(OverrideTemplateDiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideTemplateDiskParameters) DeepCopyInto(out *OverrideTemplateDiskParameters) {
	*out = *in
	if in.BusNumber != nil {
		in, out := &in.BusNumber, &out.BusNumber
		*out = new(float64)
		**out = **in
	}
	if in.BusType != nil {
		in, out := &in.BusType, &out.BusType
		*out = new(string)
		**out = **in
	}
	if in.Iops != nil {
		in, out := &in.Iops, &out.Iops
		*out = new(float64)
		**out = **in
	}
	if in.SizeInMb != nil {
		in, out := &in.SizeInMb, &out.SizeInMb
		*out = new(float64)
		**out = **in
	}
	if in.StorageProfile != nil {
		in, out := &in.StorageProfile, &out.StorageProfile
		*out = new(string)
		**out = **in
	}
	if in.UnitNumber != nil {
		in, out := &in.UnitNumber, &out.UnitNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideTemplateDiskParameters.
func (in *OverrideTemplateDiskParameters) DeepCopy() *OverrideTemplateDiskParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideTemplateDiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleObservation) DeepCopyInto(out *RuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleObservation.
func (in *RuleObservation) DeepCopy() *RuleObservation {
	if in == nil {
		return nil
	}
	out := new(RuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuleParameters) DeepCopyInto(out *RuleParameters) {
	*out = *in
	if in.DestinationIP != nil {
		in, out := &in.DestinationIP, &out.DestinationIP
		*out = new(string)
		**out = **in
	}
	if in.DestinationPort != nil {
		in, out := &in.DestinationPort, &out.DestinationPort
		*out = new(string)
		**out = **in
	}
	if in.DestinationVMID != nil {
		in, out := &in.DestinationVMID, &out.DestinationVMID
		*out = new(string)
		**out = **in
	}
	if in.DestinationVMIPType != nil {
		in, out := &in.DestinationVMIPType, &out.DestinationVMIPType
		*out = new(string)
		**out = **in
	}
	if in.DestinationVMNicID != nil {
		in, out := &in.DestinationVMNicID, &out.DestinationVMNicID
		*out = new(float64)
		**out = **in
	}
	if in.EnableLogging != nil {
		in, out := &in.EnableLogging, &out.EnableLogging
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SourceIP != nil {
		in, out := &in.SourceIP, &out.SourceIP
		*out = new(string)
		**out = **in
	}
	if in.SourcePort != nil {
		in, out := &in.SourcePort, &out.SourcePort
		*out = new(string)
		**out = **in
	}
	if in.SourceVMID != nil {
		in, out := &in.SourceVMID, &out.SourceVMID
		*out = new(string)
		**out = **in
	}
	if in.SourceVMIPType != nil {
		in, out := &in.SourceVMIPType, &out.SourceVMIPType
		*out = new(string)
		**out = **in
	}
	if in.SourceVMNicID != nil {
		in, out := &in.SourceVMNicID, &out.SourceVMNicID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuleParameters.
func (in *RuleParameters) DeepCopy() *RuleParameters {
	if in == nil {
		return nil
	}
	out := new(RuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedWithObservation) DeepCopyInto(out *SharedWithObservation) {
	*out = *in
	if in.SubjectName != nil {
		in, out := &in.SubjectName, &out.SubjectName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedWithObservation.
func (in *SharedWithObservation) DeepCopy() *SharedWithObservation {
	if in == nil {
		return nil
	}
	out := new(SharedWithObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedWithParameters) DeepCopyInto(out *SharedWithParameters) {
	*out = *in
	if in.AccessLevel != nil {
		in, out := &in.AccessLevel, &out.AccessLevel
		*out = new(string)
		**out = **in
	}
	if in.GroupID != nil {
		in, out := &in.GroupID, &out.GroupID
		*out = new(string)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedWithParameters.
func (in *SharedWithParameters) DeepCopy() *SharedWithParameters {
	if in == nil {
		return nil
	}
	out := new(SharedWithParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticIPPoolObservation) DeepCopyInto(out *StaticIPPoolObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticIPPoolObservation.
func (in *StaticIPPoolObservation) DeepCopy() *StaticIPPoolObservation {
	if in == nil {
		return nil
	}
	out := new(StaticIPPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticIPPoolParameters) DeepCopyInto(out *StaticIPPoolParameters) {
	*out = *in
	if in.EndAddress != nil {
		in, out := &in.EndAddress, &out.EndAddress
		*out = new(string)
		**out = **in
	}
	if in.StartAddress != nil {
		in, out := &in.StartAddress, &out.StartAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticIPPoolParameters.
func (in *StaticIPPoolParameters) DeepCopy() *StaticIPPoolParameters {
	if in == nil {
		return nil
	}
	out := new(StaticIPPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticRouting) DeepCopyInto(out *StaticRouting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticRouting.
func (in *StaticRouting) DeepCopy() *StaticRouting {
	if in == nil {
		return nil
	}
	out := new(StaticRouting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StaticRouting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticRoutingList) DeepCopyInto(out *StaticRoutingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StaticRouting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticRoutingList.
func (in *StaticRoutingList) DeepCopy() *StaticRoutingList {
	if in == nil {
		return nil
	}
	out := new(StaticRoutingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StaticRoutingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticRoutingObservation) DeepCopyInto(out *StaticRoutingObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticRoutingObservation.
func (in *StaticRoutingObservation) DeepCopy() *StaticRoutingObservation {
	if in == nil {
		return nil
	}
	out := new(StaticRoutingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticRoutingParameters) DeepCopyInto(out *StaticRoutingParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = make([]StaticRoutingRuleParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VappID != nil {
		in, out := &in.VappID, &out.VappID
		*out = new(string)
		**out = **in
	}
	if in.VappIDRef != nil {
		in, out := &in.VappIDRef, &out.VappIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VappIDSelector != nil {
		in, out := &in.VappIDSelector, &out.VappIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Vdc != nil {
		in, out := &in.Vdc, &out.Vdc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticRoutingParameters.
func (in *StaticRoutingParameters) DeepCopy() *StaticRoutingParameters {
	if in == nil {
		return nil
	}
	out := new(StaticRoutingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticRoutingRuleObservation) DeepCopyInto(out *StaticRoutingRuleObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticRoutingRuleObservation.
func (in *StaticRoutingRuleObservation) DeepCopy() *StaticRoutingRuleObservation {
	if in == nil {
		return nil
	}
	out := new(StaticRoutingRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticRoutingRuleParameters) DeepCopyInto(out *StaticRoutingRuleParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkCidr != nil {
		in, out := &in.NetworkCidr, &out.NetworkCidr
		*out = new(string)
		**out = **in
	}
	if in.NextHopIP != nil {
		in, out := &in.NextHopIP, &out.NextHopIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticRoutingRuleParameters.
func (in *StaticRoutingRuleParameters) DeepCopy() *StaticRoutingRuleParameters {
	if in == nil {
		return nil
	}
	out := new(StaticRoutingRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticRoutingSpec) DeepCopyInto(out *StaticRoutingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticRoutingSpec.
func (in *StaticRoutingSpec) DeepCopy() *StaticRoutingSpec {
	if in == nil {
		return nil
	}
	out := new(StaticRoutingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StaticRoutingStatus) DeepCopyInto(out *StaticRoutingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StaticRoutingStatus.
func (in *StaticRoutingStatus) DeepCopy() *StaticRoutingStatus {
	if in == nil {
		return nil
	}
	out := new(StaticRoutingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VM) DeepCopyInto(out *VM) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VM.
func (in *VM) DeepCopy() *VM {
	if in == nil {
		return nil
	}
	out := new(VM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VM) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMList) DeepCopyInto(out *VMList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VM, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMList.
func (in *VMList) DeepCopy() *VMList {
	if in == nil {
		return nil
	}
	out := new(VMList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VMList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMMetadataEntryObservation) DeepCopyInto(out *VMMetadataEntryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMMetadataEntryObservation.
func (in *VMMetadataEntryObservation) DeepCopy() *VMMetadataEntryObservation {
	if in == nil {
		return nil
	}
	out := new(VMMetadataEntryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMMetadataEntryParameters) DeepCopyInto(out *VMMetadataEntryParameters) {
	*out = *in
	if in.IsSystem != nil {
		in, out := &in.IsSystem, &out.IsSystem
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAccess != nil {
		in, out := &in.UserAccess, &out.UserAccess
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMMetadataEntryParameters.
func (in *VMMetadataEntryParameters) DeepCopy() *VMMetadataEntryParameters {
	if in == nil {
		return nil
	}
	out := new(VMMetadataEntryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMNetworkObservation) DeepCopyInto(out *VMNetworkObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMNetworkObservation.
func (in *VMNetworkObservation) DeepCopy() *VMNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(VMNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMNetworkParameters) DeepCopyInto(out *VMNetworkParameters) {
	*out = *in
	if in.AdapterType != nil {
		in, out := &in.AdapterType, &out.AdapterType
		*out = new(string)
		**out = **in
	}
	if in.Connected != nil {
		in, out := &in.Connected, &out.Connected
		*out = new(bool)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.IPAllocationMode != nil {
		in, out := &in.IPAllocationMode, &out.IPAllocationMode
		*out = new(string)
		**out = **in
	}
	if in.IsPrimary != nil {
		in, out := &in.IsPrimary, &out.IsPrimary
		*out = new(bool)
		**out = **in
	}
	if in.Mac != nil {
		in, out := &in.Mac, &out.Mac
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMNetworkParameters.
func (in *VMNetworkParameters) DeepCopy() *VMNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(VMNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMObservation) DeepCopyInto(out *VMObservation) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InternalDisk != nil {
		in, out := &in.InternalDisk, &out.InternalDisk
		*out = make([]InternalDiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(float64)
		**out = **in
	}
	if in.StatusText != nil {
		in, out := &in.StatusText, &out.StatusText
		*out = new(string)
		**out = **in
	}
	if in.VMType != nil {
		in, out := &in.VMType, &out.VMType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMObservation.
func (in *VMObservation) DeepCopy() *VMObservation {
	if in == nil {
		return nil
	}
	out := new(VMObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMParameters) DeepCopyInto(out *VMParameters) {
	*out = *in
	if in.AcceptAllEulas != nil {
		in, out := &in.AcceptAllEulas, &out.AcceptAllEulas
		*out = new(bool)
		**out = **in
	}
	if in.BootImage != nil {
		in, out := &in.BootImage, &out.BootImage
		*out = new(string)
		**out = **in
	}
	if in.BootImageID != nil {
		in, out := &in.BootImageID, &out.BootImageID
		*out = new(string)
		**out = **in
	}
	if in.CPUCores != nil {
		in, out := &in.CPUCores, &out.CPUCores
		*out = new(float64)
		**out = **in
	}
	if in.CPUHotAddEnabled != nil {
		in, out := &in.CPUHotAddEnabled, &out.CPUHotAddEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CPULimit != nil {
		in, out := &in.CPULimit, &out.CPULimit
		*out = new(float64)
		**out = **in
	}
	if in.CPUPriority != nil {
		in, out := &in.CPUPriority, &out.CPUPriority
		*out = new(string)
		**out = **in
	}
	if in.CPUReservation != nil {
		in, out := &in.CPUReservation, &out.CPUReservation
		*out = new(float64)
		**out = **in
	}
	if in.CPUShares != nil {
		in, out := &in.CPUShares, &out.CPUShares
		*out = new(float64)
		**out = **in
	}
	if in.CatalogName != nil {
		in, out := &in.CatalogName, &out.CatalogName
		*out = new(string)
		**out = **in
	}
	if in.ComputerName != nil {
		in, out := &in.ComputerName, &out.ComputerName
		*out = new(string)
		**out = **in
	}
	if in.Cpus != nil {
		in, out := &in.Cpus, &out.Cpus
		*out = new(float64)
		**out = **in
	}
	if in.Customization != nil {
		in, out := &in.Customization, &out.Customization
		*out = make([]CustomizationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExposeHardwareVirtualization != nil {
		in, out := &in.ExposeHardwareVirtualization, &out.ExposeHardwareVirtualization
		*out = new(bool)
		**out = **in
	}
	if in.GuestProperties != nil {
		in, out := &in.GuestProperties, &out.GuestProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HardwareVersion != nil {
		in, out := &in.HardwareVersion, &out.HardwareVersion
		*out = new(string)
		**out = **in
	}
	if in.Href != nil {
		in, out := &in.Href, &out.Href
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.MemoryHotAddEnabled != nil {
		in, out := &in.MemoryHotAddEnabled, &out.MemoryHotAddEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MemoryLimit != nil {
		in, out := &in.MemoryLimit, &out.MemoryLimit
		*out = new(float64)
		**out = **in
	}
	if in.MemoryPriority != nil {
		in, out := &in.MemoryPriority, &out.MemoryPriority
		*out = new(string)
		**out = **in
	}
	if in.MemoryReservation != nil {
		in, out := &in.MemoryReservation, &out.MemoryReservation
		*out = new(float64)
		**out = **in
	}
	if in.MemoryShares != nil {
		in, out := &in.MemoryShares, &out.MemoryShares
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetadataEntry != nil {
		in, out := &in.MetadataEntry, &out.MetadataEntry
		*out = make([]VMMetadataEntryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = make([]VMNetworkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkDHCPWaitSeconds != nil {
		in, out := &in.NetworkDHCPWaitSeconds, &out.NetworkDHCPWaitSeconds
		*out = new(float64)
		**out = **in
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.OsType != nil {
		in, out := &in.OsType, &out.OsType
		*out = new(string)
		**out = **in
	}
	if in.OverrideTemplateDisk != nil {
		in, out := &in.OverrideTemplateDisk, &out.OverrideTemplateDisk
		*out = make([]OverrideTemplateDiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementPolicyID != nil {
		in, out := &in.PlacementPolicyID, &out.PlacementPolicyID
		*out = new(string)
		**out = **in
	}
	if in.PowerOn != nil {
		in, out := &in.PowerOn, &out.PowerOn
		*out = new(bool)
		**out = **in
	}
	if in.PreventUpdatePowerOff != nil {
		in, out := &in.PreventUpdatePowerOff, &out.PreventUpdatePowerOff
		*out = new(bool)
		**out = **in
	}
	if in.SizingPolicyID != nil {
		in, out := &in.SizingPolicyID, &out.SizingPolicyID
		*out = new(string)
		**out = **in
	}
	if in.StorageProfile != nil {
		in, out := &in.StorageProfile, &out.StorageProfile
		*out = new(string)
		**out = **in
	}
	if in.TemplateName != nil {
		in, out := &in.TemplateName, &out.TemplateName
		*out = new(string)
		**out = **in
	}
	if in.VMNameInTemplate != nil {
		in, out := &in.VMNameInTemplate, &out.VMNameInTemplate
		*out = new(string)
		**out = **in
	}
	if in.VappName != nil {
		in, out := &in.VappName, &out.VappName
		*out = new(string)
		**out = **in
	}
	if in.VappNameRef != nil {
		in, out := &in.VappNameRef, &out.VappNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VappNameSelector != nil {
		in, out := &in.VappNameSelector, &out.VappNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VappTemplateID != nil {
		in, out := &in.VappTemplateID, &out.VappTemplateID
		*out = new(string)
		**out = **in
	}
	if in.VappTemplateIDRef != nil {
		in, out := &in.VappTemplateIDRef, &out.VappTemplateIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VappTemplateIDSelector != nil {
		in, out := &in.VappTemplateIDSelector, &out.VappTemplateIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Vdc != nil {
		in, out := &in.Vdc, &out.Vdc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMParameters.
func (in *VMParameters) DeepCopy() *VMParameters {
	if in == nil {
		return nil
	}
	out := new(VMParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMSpec) DeepCopyInto(out *VMSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMSpec.
func (in *VMSpec) DeepCopy() *VMSpec {
	if in == nil {
		return nil
	}
	out := new(VMSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMStatus) DeepCopyInto(out *VMStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMStatus.
func (in *VMStatus) DeepCopy() *VMStatus {
	if in == nil {
		return nil
	}
	out := new(VMStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Vapp) DeepCopyInto(out *Vapp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Vapp.
func (in *Vapp) DeepCopy() *Vapp {
	if in == nil {
		return nil
	}
	out := new(Vapp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Vapp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VappList) DeepCopyInto(out *VappList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Vapp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VappList.
func (in *VappList) DeepCopy() *VappList {
	if in == nil {
		return nil
	}
	out := new(VappList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VappList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VappMetadataEntryObservation) DeepCopyInto(out *VappMetadataEntryObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VappMetadataEntryObservation.
func (in *VappMetadataEntryObservation) DeepCopy() *VappMetadataEntryObservation {
	if in == nil {
		return nil
	}
	out := new(VappMetadataEntryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VappMetadataEntryParameters) DeepCopyInto(out *VappMetadataEntryParameters) {
	*out = *in
	if in.IsSystem != nil {
		in, out := &in.IsSystem, &out.IsSystem
		*out = new(bool)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UserAccess != nil {
		in, out := &in.UserAccess, &out.UserAccess
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VappMetadataEntryParameters.
func (in *VappMetadataEntryParameters) DeepCopy() *VappMetadataEntryParameters {
	if in == nil {
		return nil
	}
	out := new(VappMetadataEntryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VappObservation) DeepCopyInto(out *VappObservation) {
	*out = *in
	if in.Href != nil {
		in, out := &in.Href, &out.Href
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(float64)
		**out = **in
	}
	if in.StatusText != nil {
		in, out := &in.StatusText, &out.StatusText
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VappObservation.
func (in *VappObservation) DeepCopy() *VappObservation {
	if in == nil {
		return nil
	}
	out := new(VappObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VappParameters) DeepCopyInto(out *VappParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.GuestProperties != nil {
		in, out := &in.GuestProperties, &out.GuestProperties
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Lease != nil {
		in, out := &in.Lease, &out.Lease
		*out = make([]LeaseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MetadataEntry != nil {
		in, out := &in.MetadataEntry, &out.MetadataEntry
		*out = make([]VappMetadataEntryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Org != nil {
		in, out := &in.Org, &out.Org
		*out = new(string)
		**out = **in
	}
	if in.PowerOn != nil {
		in, out := &in.PowerOn, &out.PowerOn
		*out = new(bool)
		**out = **in
	}
	if in.Vdc != nil {
		in, out := &in.Vdc, &out.Vdc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VappParameters.
func (in *VappParameters) DeepCopy() *VappParameters {
	if in == nil {
		return nil
	}
	out := new(VappParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VappSpec) DeepCopyInto(out *VappSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VappSpec.
func (in *VappSpec) DeepCopy() *VappSpec {
	if in == nil {
		return nil
	}
	out := new(VappSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VappStatus) DeepCopyInto(out *VappStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VappStatus.
func (in *VappStatus) DeepCopy() *VappStatus {
	if in == nil {
		return nil
	}
	out := new(VappStatus)
	in.DeepCopyInto(out)
	return out
}
