---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: firewallrules.vapp.vcd.upbound.io
spec:
  group: vapp.vcd.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vcd
    kind: FirewallRules
    listKind: FirewallRulesList
    plural: firewallrules
    singular: firewallrules
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: FirewallRules is the Schema for the FirewallRuless API. Provides
          a VMware Cloud Director vApp Firewall resource. This can be used to create,
          modify, and delete firewall settings and rules.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FirewallRulesSpec defines the desired state of FirewallRules
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  defaultAction:
                    description: Either 'allow' or 'drop'. Specifies what to do should
                      none of the rules match. Specifies what to do should none of
                      the rules match. Either `allow` or `drop`
                    type: string
                  enabled:
                    description: Enable or disable firewall. Default is true. Enable
                      or disable firewall service. Default is `true`
                    type: boolean
                  logDefaultAction:
                    description: Flag to enable logging for default action. Default
                      value is false. Flag to enable logging for default action. Default
                      value is false.
                    type: boolean
                  org:
                    description: The name of organization to use, optional if defined
                      at provider level. Useful when connected as sysadmin working
                      across different organisations. The name of organization to
                      use, optional if defined at provider level. Useful when connected
                      as sysadmin working across different organizations
                    type: string
                  rule:
                    description: Configures a firewall rule; see Rules below for details.
                    items:
                      properties:
                        destinationIp:
                          description: The destination IP to match. Either an IP address,
                            IP range or any. Destination IP address to which the rule
                            applies. A value of `Any` matches any IP address.
                          type: string
                        destinationPort:
                          description: The destination port to match. Either a port
                            number or any. Destination port to which this rule applies.
                          type: string
                        destinationVmId:
                          description: Destination VM identifier. Destination VM identifier
                          type: string
                        destinationVmIpType:
                          description: 'The value can be one of: assigned - assigned
                            internal IP will be automatically chosen, NAT - NATed
                            external IP will be automatically chosen. The value can
                            be one of: `assigned` - assigned internal IP will be automatically
                            chosen. `NAT`: NATed external IP will be automatically
                            chosen.'
                          type: string
                        destinationVmNicId:
                          description: VM NIC ID to which this rule applies. Destination
                            VM NIC ID to which this rule applies.
                          type: number
                        enableLogging:
                          description: true value will enable rule logging. Default
                            is false. 'true' value will enable rule logging. Default
                            is false
                          type: boolean
                        enabled:
                          description: Enable or disable firewall. Default is true.
                            'true' value will enable firewall rule
                          type: boolean
                        name:
                          description: Name of the firewall rule. Rule name
                          type: string
                        policy:
                          description: 'Specifies what to do when this rule is matched.
                            Either allow or drop. One of: `drop` (drop packets that
                            match the rule), `allow` (allow packets that match the
                            rule to pass through the firewall)'
                          type: string
                        protocol:
                          description: 'The protocol to match. One of tcp, udp, icmp,
                            any or tcp&udp. Default is any. Specify the protocols
                            to which the rule should be applied. One of: `any`, `icmp`,
                            `tcp`, `udp`, `tcp&udp`'
                          type: string
                        sourceIp:
                          description: The source IP to match. Either an IP address,
                            IP range or any. Source IP address to which the rule applies.
                            A value of `Any` matches any IP address.
                          type: string
                        sourcePort:
                          description: The source port to match. Either a port number
                            or any. Source port to which this rule applies.
                          type: string
                        sourceVmId:
                          description: Source VM identifier. Source VM identifier
                          type: string
                        sourceVmIpType:
                          description: 'The value can be one of: assigned - assigned
                            internal IP will be automatically chosen, NAT - NATed
                            external IP will be automatically chosen. The value can
                            be one of: `assigned` - assigned internal IP will be automatically
                            chosen. `NAT`: NATed external IP will be automatically
                            chosen.'
                          type: string
                        sourceVmNicId:
                          description: VM NIC ID to which this rule applies. Source
                            VM NIC ID to which this rule applies.
                          type: number
                      type: object
                    type: array
                  vappId:
                    description: The identifier of vApp. vApp identifier
                    type: string
                  vappIdRef:
                    description: Reference to a Vapp to populate vappId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vappIdSelector:
                    description: Selector for a Vapp to populate vappId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  vdc:
                    description: The name of VDC to use, optional if defined at provider
                      level. The name of VDC to use, optional if defined at provider
                      level
                    type: string
                required:
                - defaultAction
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: FirewallRulesStatus defines the observed state of FirewallRules.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
