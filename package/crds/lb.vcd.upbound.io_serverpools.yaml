---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: serverpools.lb.vcd.upbound.io
spec:
  group: lb.vcd.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vcd
    kind: ServerPool
    listKind: ServerPoolList
    plural: serverpools
    singular: serverpool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ServerPool is the Schema for the ServerPools API. Provides an
          NSX edge gateway load balancer server pool resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServerPoolSpec defines the desired state of ServerPool
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  algorithm:
                    description: Server Pool load balancing method. Can be one of
                      ip-hash, round-robin, uri, leastconn, url, or httpheader Balancing
                      method for the service. One of 'ip-hash', 'round-robin', 'uri',
                      'leastconn', 'url', or 'httpheader'
                    type: string
                  algorithmParameters:
                    description: Valid only when algorithm is httpheader or url. The
                      httpheader algorithm parameter has one option headerName=<name>
                      while the url algorithm parameter has option urlParam=<url>.
                      Additional options for load balancing algorithm for httpheader
                      or url algorithms
                    type: string
                  description:
                    description: Server Pool description Server pool description
                    type: string
                  edgeGateway:
                    description: The name of the edge gateway on which the server
                      pool is to be created Edge gateway name in which the LB Server
                      Pool is located
                    type: string
                  edgeGatewayRef:
                    description: Reference to a EdgeGateway in edgegateway to populate
                      edgeGateway.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  edgeGatewaySelector:
                    description: Selector for a EdgeGateway in edgegateway to populate
                      edgeGateway.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  enableTransparency:
                    description: When transparency is false (default) backend servers
                      see the IP address of the traffic source as the internal IP
                      address of the load balancer. When it is true the source IP
                      address is the actual IP address of the client and the edge
                      gateway must be set as the default gateway to ensure that return
                      packets go through the edge gateway. Makes client IP addresses
                      visible to the backend servers
                    type: boolean
                  member:
                    description: A block to define server pool members. Multiple can
                      be used. See Member and example for usage details.
                    items:
                      properties:
                        condition:
                          description: State of member in a pool. One of enabled,
                            disabled, or drain. When member condition is set to drain
                            it stops taking new connections and calls, while it allows
                            its sessions on existing connections to continue until
                            they naturally end. This allows to gracefully remove member
                            node from load balancing rotation. Defines member state.
                            One of enabled, drain, disabled.
                          type: string
                        ipAddress:
                          description: Member IP address IP address of member in server
                            pool
                          type: string
                        maxConnections:
                          description: 'The maximum number of concurrent connections
                            the member can handle. Note: when the number of incoming
                            requests exceeds the maximum, requests are queued and
                            the load balancer waits for a connection to be released.
                            The maximum number of concurrent connections the member
                            can handle. If exceeded requests are queued and the load
                            balancer waits for a connection to be released'
                          type: number
                        minConnections:
                          description: The minimum number of concurrent connections
                            a member must always accept. Minimum number of concurrent
                            connections a member must always accept
                          type: number
                        monitorPort:
                          description: 'Monitor Port at which the member is to receive
                            health monitor requests. Note: can be the same as port
                            Port at which the member is to receive health monitor
                            requests. Can be the same as port'
                          type: number
                        name:
                          description: Server Pool name Name of pool member
                          type: string
                        port:
                          description: The port at which the member is to receive
                            traffic from the load balancer. Port at which the member
                            is to receive traffic from the load balancer
                          type: number
                        weight:
                          description: The proportion of traffic this member is to
                            handle. Must be an integer in the range 1-256. Proportion
                            of traffic this member is to handle. Must be an integer
                            in the range 1-256
                          type: number
                      required:
                      - condition
                      - ipAddress
                      - monitorPort
                      - name
                      - port
                      - weight
                      type: object
                    type: array
                  monitorId:
                    description: vcd_lb_service_monitor resource id to attach to server
                      pool for health check parameters Load Balancer Service Monitor
                      ID
                    type: string
                  org:
                    description: The name of organization to use, optional if defined
                      at provider level. Useful when connected as sysadmin working
                      across different organisations The name of organization to use,
                      optional if defined at provider level. Useful when connected
                      as sysadmin working across different organizations
                    type: string
                  vdc:
                    description: The name of VDC to use, optional if defined at provider
                      level The name of VDC to use, optional if defined at provider
                      level
                    type: string
                required:
                - algorithm
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ServerPoolStatus defines the observed state of ServerPool.
            properties:
              atProvider:
                properties:
                  id:
                    description: The NSX ID of the load balancer server pool
                    type: string
                  member:
                    description: A block to define server pool members. Multiple can
                      be used. See Member and example for usage details.
                    items:
                      properties:
                        id:
                          description: The NSX ID of the load balancer server pool
                            Pool member id (formatted as member-xx, where xx is a
                            number)
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
