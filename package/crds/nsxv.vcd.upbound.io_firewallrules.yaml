---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: firewallrules.nsxv.vcd.upbound.io
spec:
  group: nsxv.vcd.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vcd
    kind: FirewallRule
    listKind: FirewallRuleList
    plural: firewallrules
    singular: firewallrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: FirewallRule is the Schema for the FirewallRules API. Provides
          a VMware Cloud Director firewall rule resource for advanced edge gateways
          (NSX-V). This can be used to create, modify, and delete firewall rules.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FirewallRuleSpec defines the desired state of FirewallRule
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  aboveRuleId:
                    description: This can be used to alter default rule placement
                      order. By default every rule is appended to the end of firewall
                      rule list. When a value of another rule is set - this rule will
                      be placed above the specified rule. This firewall rule will
                      be inserted above the referred one
                    type: string
                  action:
                    description: Defines if the rule is set to accept or deny traffic.
                      Default accept 'accept' or 'deny'. Default 'accept'
                    type: string
                  destination:
                    description: Exactly one block to define source criteria for firewall.
                      See Endpoint and example for usage details.
                    items:
                      properties:
                        exclude:
                          description: When the toggle exclusion is selected, the
                            rule is applied to traffic on all sources except for the
                            locations you excluded. When the toggle exclusion is not
                            selected, the rule applies to traffic you specified. Default
                            false. This example uses it. Rule is applied to traffic
                            going to any destinations except for the excluded destination.
                            Default 'false'
                          type: boolean
                        gatewayInterfaces:
                          description: A set of with either three keywords vse (UI
                            names it as any), internal, external or an org network
                            name. It automatically looks up vNic in the backend. 'vse',
                            'internal', 'external' or network name
                          items:
                            type: string
                          type: array
                        ipAddresses:
                          description: A set of IP addresses, CIDRs or ranges. A keyword
                            any is also accepted as a parameter. IP address, CIDR,
                            an IP range, or the keyword 'any'
                          items:
                            type: string
                          type: array
                        ipSets:
                          description: A set of existing IP set names (either created
                            manually or configured using vcd_nsxv_ip_set resource)
                            Set of IP set names
                          items:
                            type: string
                          type: array
                        orgNetworks:
                          description: A set of org network names. Set of org network
                            names
                          items:
                            type: string
                          type: array
                        vmIds:
                          description: A set of .id fields of vcd_vapp_vm resources.
                            Set of VM IDs
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  edgeGateway:
                    description: The name of the edge gateway on which to apply the
                      firewall rule. Edge gateway name in which Firewall Rule is located
                    type: string
                  edgeGatewayRef:
                    description: Reference to a EdgeGateway in edgegateway to populate
                      edgeGateway.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  edgeGatewaySelector:
                    description: Selector for a EdgeGateway in edgegateway to populate
                      edgeGateway.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  enabled:
                    description: Defines if the rule is enabaled. Default true. Whether
                      the rule should be enabled. Default 'true'
                    type: boolean
                  loggingEnabled:
                    description: Defines if the logging for this rule is enabaled.
                      Default false. Whether logging should be enabled for this rule.
                      Default 'false'
                    type: boolean
                  org:
                    description: The name of organization to use, optional if defined
                      at provider level. Useful when connected as sysadmin working
                      across different organisations. The name of organization to
                      use, optional if defined at provider level. Useful when connected
                      as sysadmin working across different organizations
                    type: string
                  ruleTag:
                    description: This can be used to specify user-controlled rule
                      tag. If not specified, it will report rule ID after creation.
                      Must be between 65537-131072. Optional. Allows to set custom
                      rule tag
                    type: number
                  ruleType:
                    description: Possible values - user, internal_high. Read only.
                      Possible values 'user', 'internal_high'
                    type: string
                  service:
                    description: One or more blocks to define protocol and port details.
                      Use multiple blocks if you want to define multiple port/protocol
                      combinations for the same rule. See Service and example for
                      usage details.
                    items:
                      properties:
                        port:
                          description: Port number or range separated by - for port
                            number. Default 'any'.
                          type: string
                        protocol:
                          description: One of any, tcp, udp, icmp to apply.
                          type: string
                        sourcePort:
                          description: Port number or range separated by - for port
                            number. Default 'any'.
                          type: string
                      required:
                      - protocol
                      type: object
                    type: array
                  source:
                    description: Exactly one block to define source criteria for firewall.
                      See Endpoint and example for usage details.
                    items:
                      properties:
                        exclude:
                          description: When the toggle exclusion is selected, the
                            rule is applied to traffic on all sources except for the
                            locations you excluded. When the toggle exclusion is not
                            selected, the rule applies to traffic you specified. Default
                            false. This example uses it. Rule is applied to traffic
                            coming from all sources except for the excluded source.
                            Default 'false'
                          type: boolean
                        gatewayInterfaces:
                          description: A set of with either three keywords vse (UI
                            names it as any), internal, external or an org network
                            name. It automatically looks up vNic in the backend. 'vse',
                            'internal', 'external' or network name
                          items:
                            type: string
                          type: array
                        ipAddresses:
                          description: A set of IP addresses, CIDRs or ranges. A keyword
                            any is also accepted as a parameter. IP address, CIDR,
                            an IP range, or the keyword 'any'
                          items:
                            type: string
                          type: array
                        ipSets:
                          description: A set of existing IP set names (either created
                            manually or configured using vcd_nsxv_ip_set resource)
                            Set of IP set names
                          items:
                            type: string
                          type: array
                        orgNetworks:
                          description: A set of org network names. Set of org network
                            names
                          items:
                            type: string
                          type: array
                        vmIds:
                          description: A set of .id fields of vcd_vapp_vm resources.
                            Set of VM IDs
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  vdc:
                    description: The name of VDC to use, optional if defined at provider
                      level. The name of VDC to use, optional if defined at provider
                      level
                    type: string
                required:
                - destination
                - service
                - source
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: FirewallRuleStatus defines the observed state of FirewallRule.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
