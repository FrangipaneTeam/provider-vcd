---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: albpools.nsxt.vcd.upbound.io
spec:
  group: nsxt.vcd.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vcd
    kind: ALBPool
    listKind: ALBPoolList
    plural: albpools
    singular: albpool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ALBPool is the Schema for the ALBPools API. Provides a resource
          to manage NSX-T ALB Pools for particular NSX-T Edge Gateway. Pools maintain
          the list of servers assigned to them and perform health monitoring, load
          balancing, persistence. A pool may only be used or referenced by only one
          virtual service at a time.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ALBPoolSpec defines the desired state of ALBPool
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  algorithm:
                    description: Optional algorithm for choosing pool members (default
                      LEAST_CONNECTIONS). Other options contain ROUND_ROBIN, CONSISTENT_HASH
                      (uses Source IP Address hash), FASTEST_RESPONSE, LEAST_LOAD,
                      FEWEST_SERVERS, RANDOM, FEWEST_TASKS, CORE_AFFINITY Algorithm
                      for choosing pool members (default LEAST_CONNECTIONS). Other
                      `ROUND_ROBIN`,`CONSISTENT_HASH`, `FASTEST_RESPONSE`, `LEAST_LOAD`,
                      `FEWEST_SERVERS`, `RANDOM`, `FEWEST_TASKS`,`CORE_AFFINITY`
                    type: string
                  caCertificateIds:
                    description: A set of CA Certificates to be used when validating
                      certificates presented by the pool members. Can be looked up
                      using vcd_library_certificate data source A set of root certificate
                      IDs to use when validating certificates presented by pool members
                    items:
                      type: string
                    type: array
                  cnCheckEnabled:
                    description: Specifies whether to check the common name of the
                      certificate presented by the pool member Boolean flag if common
                      name check of the certificate should be enabled
                    type: boolean
                  defaultPort:
                    description: Default Port defines destination server port used
                      by the traffic sent to the member (default 80) Default Port
                      defines destination server port used by the traffic sent to
                      the member (default 80)
                    type: number
                  description:
                    description: An optional description NSX-T ALB Pool Description
                      of ALB Pool
                    type: string
                  domainNames:
                    description: A set of domain names which will be used to verify
                      the common names or subject alternative names presented by the
                      pool member certificates. It is performed only when common name
                      check cn_check_enabled is enabled List of domain names which
                      will be used to verify common names
                    items:
                      type: string
                    type: array
                  edgeGatewayId:
                    description: An ID of NSX-T Edge Gateway. Can be looked up using
                      vcd_nsxt_edgegateway data source Edge gateway ID in which ALB
                      Pool should be created
                    type: string
                  edgeGatewayIdRef:
                    description: Reference to a EdgeGateway to populate edgeGatewayId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  edgeGatewayIdSelector:
                    description: Selector for a EdgeGateway to populate edgeGatewayId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  enabled:
                    description: Boolean value if NSX-T ALB Pool should be enabled
                      (default true) Boolean value if ALB Pool is enabled or not (default
                      true)
                    type: boolean
                  gracefulTimeoutPeriod:
                    description: 1 (infinite) Maximum time in minutes to gracefully
                      disable pool member (default 1)
                    type: number
                  healthMonitor:
                    description: A block to define health monitor. Multiple can be
                      used. See Health monitor and example for usage details.
                    items:
                      properties:
                        type:
                          description: 'Type of persistence profile. One of: Type
                            of health monitor. One of `HTTP`, `HTTPS`, `TCP`, `UDP`,
                            `PING`'
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  member:
                    description: A block to define pool members. Multiple can be used.
                      See Member and example for usage details. ALB Pool Members
                    items:
                      properties:
                        enabled:
                          description: Boolean value if NSX-T ALB Pool should be enabled
                            (default true) Defines if pool member is accepts traffic
                            (default 'true')
                          type: boolean
                        ipAddress:
                          description: IP address of pool member. IP address of pool
                            member
                          type: string
                        port:
                          description: Port for receiving traffic - overrides the
                            root value default_port for individual members Member
                            port
                          type: number
                        ratio:
                          description: Ratio of selecting eligible servers in the
                            pool (default 1) Ratio of selecting eligible servers in
                            the pool
                          type: number
                      required:
                      - ipAddress
                      type: object
                    type: array
                  org:
                    description: The name of organization to use, optional if defined
                      at provider level. Useful when connected as sysadmin working
                      across different organisations. The name of organization to
                      use, optional if defined at provider level. Useful when connected
                      as sysadmin working across different organizations
                    type: string
                  passiveMonitoringEnabled:
                    description: defines if client traffic should be used to check
                      if pool member is up or down (default true) Monitors if the
                      traffic is accepted by node (default true)
                    type: boolean
                  persistenceProfile:
                    description: Persistence profile will ensure that the same user
                      sticks to the same server for a desired duration of time. If
                      the persistence profile is unmanaged by Cloud Director, updates
                      that leave the values unchanged will continue to use the same
                      unmanaged profile. Any changes made to the persistence profile
                      will cause Cloud Director to switch the pool to a profile managed
                      by Cloud Director. See Persistence profile and example for usage
                      details.
                    items:
                      properties:
                        type:
                          description: 'Type of persistence profile. One of: Type
                            of persistence strategy. One of `CLIENT_IP`, `HTTP_COOKIE`,
                            `CUSTOM_HTTP_HEADER`, `APP_COOKIE`, `TLS`'
                          type: string
                        value:
                          description: 'is required for some type values: HTTP_COOKIE,
                            CUSTOM_HTTP_HEADER, APP_COOKIE Value of attribute based
                            on persistence type'
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  vdc:
                    description: The name of VDC to use, optional if defined at provider
                      level
                    type: string
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ALBPoolStatus defines the observed state of ALBPool.
            properties:
              atProvider:
                properties:
                  associatedVirtualServiceIds:
                    description: A set of associated Virtual Service IDs IDs of associated
                      virtual services
                    items:
                      type: string
                    type: array
                  associatedVirtualServices:
                    description: A set of associated Virtual Service names Names of
                      associated virtual services
                    items:
                      type: string
                    type: array
                  enabledMemberCount:
                    description: Number of enabled members defined in the Pool Number
                      of enabled members in the pool
                    type: number
                  healthMessage:
                    description: Health message of NSX-T ALB Pool Health message
                    type: string
                  healthMonitor:
                    description: A block to define health monitor. Multiple can be
                      used. See Health monitor and example for usage details.
                    items:
                      properties:
                        name:
                          description: A name for NSX-T ALB Pool
                          type: string
                        systemDefined:
                          description: A boolean flag if the Health monitor is system
                            defined.
                          type: boolean
                      type: object
                    type: array
                  id:
                    type: string
                  member:
                    description: A block to define pool members. Multiple can be used.
                      See Member and example for usage details. ALB Pool Members
                    items:
                      properties:
                        detailedHealthMessage:
                          description: human-readable member health description. Detailed
                            health message
                          type: string
                        healthStatus:
                          description: one of UP, DOWN, DISABLED. Health status
                          type: string
                        markedDownBy:
                          description: A set of health monitors that marked the member
                            as DOWN Marked down by provides a set of health monitors
                            that marked the service down
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  memberCount:
                    description: Total number of members defined in the Pool Number
                      of members in the pool
                    type: number
                  persistenceProfile:
                    description: Persistence profile will ensure that the same user
                      sticks to the same server for a desired duration of time. If
                      the persistence profile is unmanaged by Cloud Director, updates
                      that leave the values unchanged will continue to use the same
                      unmanaged profile. Any changes made to the persistence profile
                      will cause Cloud Director to switch the pool to a profile managed
                      by Cloud Director. See Persistence profile and example for usage
                      details.
                    items:
                      properties:
                        name:
                          description: A name for NSX-T ALB Pool System generated
                            name of persistence profile
                          type: string
                      type: object
                    type: array
                  upMemberCount:
                    description: Number of members defined in the Pool that are accepting
                      traffic Number of members in the pool serving the traffic
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
