---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: natrules.nsxt.vcd.upbound.io
spec:
  group: nsxt.vcd.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vcd
    kind: NATRule
    listKind: NATRuleList
    plural: natrules
    singular: natrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: NATRule is the Schema for the NATRules API. Provides a resource
          to manage NSX-T NAT rules. To change the source IP address from a private
          to a public IP address, you create a source NAT (SNAT) rule. To change the
          destination IP address from a public to a private IP address, you create
          a destination NAT (DNAT) rule.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NATRuleSpec defines the desired state of NATRule
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  appPortProfileId:
                    description: Application Port Profile to which to apply the rule.
                      The Application Port Profile includes a port, and a protocol
                      that the incoming traffic uses on the edge gateway to connect
                      to the internal network.  Can be looked up using vcd_nsxt_app_port_profile
                      data source or created using vcd_nsxt_app_port_profile resource
                      Application Port Profile to apply for this rule
                    type: string
                  description:
                    description: An optional description of the NAT rule Description
                      of NAT rule
                    type: string
                  dnatExternalPort:
                    description: For DNAT only. This represents the external port
                      number or port range when doing DNAT port forwarding from external
                      to internal. The default dnatExternalPort is “ANY” meaning traffic
                      on any port for the given IPs selected will be translated. For
                      DNAT only. Enter a port into which the DNAT rule is translating
                      for the packets inbound to the virtual machines.
                    type: string
                  edgeGatewayId:
                    description: The ID of the Edge Gateway (NSX-T only). Can be looked
                      up using vcd_nsxt_edgegateway data source Edge gateway name
                      in which NAT Rule is located
                    type: string
                  edgeGatewayIdRef:
                    description: Reference to a EdgeGateway to populate edgeGatewayId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  edgeGatewayIdSelector:
                    description: Selector for a EdgeGateway to populate edgeGatewayId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  enabled:
                    description: Enables or disables NAT rule (default true) Enables
                      or disables this rule
                    type: boolean
                  externalAddress:
                    description: The external address for the NAT Rule. This must
                      be supplied as a single IP or Network CIDR. For a DNAT rule,
                      this is the external facing IP Address for incoming traffic.
                      For an SNAT rule, this is the external facing IP Address for
                      outgoing traffic. These IPs are typically allocated/suballocated
                      IP Addresses on the Edge Gateway. For a REFLEXIVE rule, these
                      are the external facing IPs. IP address or CIDR of external
                      network
                    type: string
                  externalAddressRef:
                    description: Reference to a EdgeGateway to populate externalAddress.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  externalAddressSelector:
                    description: Selector for a EdgeGateway to populate externalAddress.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  firewallMatch:
                    description: You can set a firewall match rule to determine how
                      firewall is applied during NAT. One of MATCH_INTERNAL_ADDRESS,
                      MATCH_EXTERNAL_ADDRESS, BYPASS VCD 10.2.2+ Determines how the
                      firewall matches the address during NATing if firewall stage
                      is not skipped. One of 'MATCH_INTERNAL_ADDRESS', 'MATCH_EXTERNAL_ADDRESS',
                      'BYPASS'
                    type: string
                  internalAddress:
                    description: The internal address for the NAT Rule. This must
                      be supplied as a single IP or Network CIDR. For a DNAT rule,
                      this is the internal IP address for incoming traffic. For an
                      SNAT rule, this is the internal IP Address for outgoing traffic.
                      For a REFLEXIVE rule, these are the internal IPs. These IPs
                      are typically the Private IPs that are allocated to workloads.
                      IP address or CIDR of the virtual machines for which you are
                      configuring NAT
                    type: string
                  logging:
                    description: Enable to have the address translation performed
                      by this rule logged (default false). Note User might lack rights
                      (Organization Administrator role by default is missing Gateway
                      -> Configure System Logging right) to enable logging, but API
                      does not return error and it is not possible to validate it.
                      Enable logging when this rule is applied
                    type: boolean
                  org:
                    description: The name of organization to use, optional if defined
                      at provider level. Useful when connected as sysadmin working
                      across different organisations. The name of organization to
                      use, optional if defined at provider level. Useful when connected
                      as sysadmin working across different organizations
                    type: string
                  priority:
                    description: if an address has multiple NAT rules, you can assign
                      these rules different priorities to determine the order in which
                      they are applied. A lower value means a higher priority for
                      this rule. VCD 10.2.2+ If an address has multiple NAT rules,
                      the rule with the highest priority is applied. A lower value
                      means a higher precedence for this rule.
                    type: number
                  ruleType:
                    description: One of DNAT, NO_DNAT, SNAT, NO_SNAT, REFLEXIVE Rule
                      type - one of 'DNAT', 'NO_DNAT', 'SNAT', 'NO_SNAT', 'REFLEXIVE'
                    type: string
                  snatDestinationAddress:
                    description: For SNAT only. The destination addresses to match
                      in the SNAT Rule. This must be supplied as a single IP or Network
                      CIDR. Providing no value for this field results in match with
                      ANY destination network. For SNAT only. If you want the rule
                      to apply only for traffic to a specific domain, enter an IP
                      address for this domain or an IP address range in CIDR format.
                    type: string
                  vdc:
                    description: The name of VDC to use, optional if defined at provider
                      level
                    type: string
                required:
                - ruleType
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: NATRuleStatus defines the observed state of NATRule.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
